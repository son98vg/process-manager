import { NgZone, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { NotificationAnimationType } from '../../enums/notification-animation-type.enum';
import { Notification } from '../../interfaces/notification.type';
import { NotificationsService } from '../../services/notifications.service';
import * as ɵngcc0 from '@angular/core';
export declare class NotificationComponent implements OnInit, OnDestroy {
    private notificationService;
    private domSanitizer;
    private cd;
    private zone;
    timeOut: number;
    showProgressBar: boolean;
    pauseOnHover: boolean;
    clickToClose: boolean;
    clickIconToClose: boolean;
    maxLength: number;
    theClass: string;
    rtl: boolean;
    animate: NotificationAnimationType;
    position: number;
    item: Notification;
    title: any;
    content: any;
    titleIsTemplate: boolean;
    contentIsTemplate: boolean;
    htmlIsTemplate: boolean;
    progressWidth: number;
    safeSvg: SafeHtml;
    safeInputHtml: SafeHtml;
    private stopTime;
    private timer;
    private framesPerSecond;
    private sleepTime;
    private startTime;
    private endTime;
    private pauseStart;
    private icon;
    constructor(notificationService: NotificationsService, domSanitizer: DomSanitizer, cd: ChangeDetectorRef, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    startTimeOut(): void;
    onEnter(): void;
    onLeave(): void;
    onClick(event: MouseEvent): void;
    onClickIcon(event: MouseEvent): void;
    attachOverrides(): void;
    private instance;
    private remove;
    private contentType;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NotificationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NotificationComponent, "simple-notification", never, { "timeOut": "timeOut"; "showProgressBar": "showProgressBar"; "pauseOnHover": "pauseOnHover"; "clickToClose": "clickToClose"; "clickIconToClose": "clickIconToClose"; "maxLength": "maxLength"; "theClass": "theClass"; "rtl": "rtl"; "animate": "animate"; "position": "position"; "item": "item"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJub3RpZmljYXRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nWm9uZSwgT25EZXN0cm95LCBPbkluaXQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuaW1wb3J0IHsgTm90aWZpY2F0aW9uQW5pbWF0aW9uVHlwZSB9IGZyb20gJy4uLy4uL2VudW1zL25vdGlmaWNhdGlvbi1hbmltYXRpb24tdHlwZS5lbnVtJztcclxuaW1wb3J0IHsgTm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9ub3RpZmljYXRpb24udHlwZSc7XHJcbmltcG9ydCB7IE5vdGlmaWNhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbm90aWZpY2F0aW9ucy5zZXJ2aWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTm90aWZpY2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSBub3RpZmljYXRpb25TZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBkb21TYW5pdGl6ZXI7XHJcbiAgICBwcml2YXRlIGNkO1xyXG4gICAgcHJpdmF0ZSB6b25lO1xyXG4gICAgdGltZU91dDogbnVtYmVyO1xyXG4gICAgc2hvd1Byb2dyZXNzQmFyOiBib29sZWFuO1xyXG4gICAgcGF1c2VPbkhvdmVyOiBib29sZWFuO1xyXG4gICAgY2xpY2tUb0Nsb3NlOiBib29sZWFuO1xyXG4gICAgY2xpY2tJY29uVG9DbG9zZTogYm9vbGVhbjtcclxuICAgIG1heExlbmd0aDogbnVtYmVyO1xyXG4gICAgdGhlQ2xhc3M6IHN0cmluZztcclxuICAgIHJ0bDogYm9vbGVhbjtcclxuICAgIGFuaW1hdGU6IE5vdGlmaWNhdGlvbkFuaW1hdGlvblR5cGU7XHJcbiAgICBwb3NpdGlvbjogbnVtYmVyO1xyXG4gICAgaXRlbTogTm90aWZpY2F0aW9uO1xyXG4gICAgdGl0bGU6IGFueTtcclxuICAgIGNvbnRlbnQ6IGFueTtcclxuICAgIHRpdGxlSXNUZW1wbGF0ZTogYm9vbGVhbjtcclxuICAgIGNvbnRlbnRJc1RlbXBsYXRlOiBib29sZWFuO1xyXG4gICAgaHRtbElzVGVtcGxhdGU6IGJvb2xlYW47XHJcbiAgICBwcm9ncmVzc1dpZHRoOiBudW1iZXI7XHJcbiAgICBzYWZlU3ZnOiBTYWZlSHRtbDtcclxuICAgIHNhZmVJbnB1dEh0bWw6IFNhZmVIdG1sO1xyXG4gICAgcHJpdmF0ZSBzdG9wVGltZTtcclxuICAgIHByaXZhdGUgdGltZXI7XHJcbiAgICBwcml2YXRlIGZyYW1lc1BlclNlY29uZDtcclxuICAgIHByaXZhdGUgc2xlZXBUaW1lO1xyXG4gICAgcHJpdmF0ZSBzdGFydFRpbWU7XHJcbiAgICBwcml2YXRlIGVuZFRpbWU7XHJcbiAgICBwcml2YXRlIHBhdXNlU3RhcnQ7XHJcbiAgICBwcml2YXRlIGljb247XHJcbiAgICBjb25zdHJ1Y3Rvcihub3RpZmljYXRpb25TZXJ2aWNlOiBOb3RpZmljYXRpb25zU2VydmljZSwgZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgem9uZTogTmdab25lKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgc3RhcnRUaW1lT3V0KCk6IHZvaWQ7XHJcbiAgICBvbkVudGVyKCk6IHZvaWQ7XHJcbiAgICBvbkxlYXZlKCk6IHZvaWQ7XHJcbiAgICBvbkNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcclxuICAgIG9uQ2xpY2tJY29uKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcclxuICAgIGF0dGFjaE92ZXJyaWRlcygpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBpbnN0YW5jZTtcclxuICAgIHByaXZhdGUgcmVtb3ZlO1xyXG4gICAgcHJpdmF0ZSBjb250ZW50VHlwZTtcclxufVxyXG4iXX0=